# Generated by Django 2.0.2 on 2020-09-18 16:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Buybook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stocks', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='OPEN', max_length=20)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Buystage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=0)),
                ('num_stocks', models.IntegerField(default=0)),
                ('bought', models.IntegerField(default=0)),
                ('orderprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='OPEN', max_length=20)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CancelledOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=0)),
                ('num_stocks', models.IntegerField(default=0)),
                ('mode', models.CharField(choices=[('buy', 'BUY'), ('sell', 'SELL')], default='BUY', max_length=10)),
                ('orderprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='CANCELLED', max_length=20)),
                ('reason', models.CharField(default='Default', max_length=50)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('mkt_qty', models.DecimalField(decimal_places=0, default=0, max_digits=20)),
                ('cap', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('cmp', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('change', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cap_type', models.CharField(blank=True, choices=[('small', 'Small Cap'), ('mid', 'Mid Cap'), ('large', 'Large Cap')], max_length=20, null=True)),
                ('stocks_bought', models.IntegerField(default=0)),
                ('industry', models.CharField(blank=True, max_length=120, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['cap_type', 'code'],
            },
        ),
        migrations.CreateModel(
            name='CompanyCMPRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cmp', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CompletedOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=0)),
                ('num_stocks', models.IntegerField(default=0)),
                ('mode', models.CharField(choices=[('buy', 'BUY'), ('sell', 'SELL')], default='BUY', max_length=10)),
                ('orderprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('executionprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='COMPLETED', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='CurrentForm',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('team', models.CharField(default='NA', max_length=50)),
                ('matches', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('balls_faced', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('catches', models.IntegerField(default=0)),
                ('stumpings', models.IntegerField(default=0)),
                ('balls_bowled', models.IntegerField(default=0)),
                ('runs_conceded', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('last_match_pushed', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CurrentMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(default=0)),
                ('home_team', models.CharField(default='NA', max_length=50)),
                ('away_team', models.CharField(default='NA', max_length=50)),
                ('batting_team', models.CharField(default='NA', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='InvestmentRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stocks', models.IntegerField(default=0)),
                ('buy_escrow', models.IntegerField(default=0)),
                ('sell_escrow', models.IntegerField(default=0)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_id', models.IntegerField(default=0)),
                ('name', models.CharField(default='NA', max_length=50)),
                ('team', models.CharField(default='NA', max_length=50)),
                ('runs', models.IntegerField(default=0)),
                ('balls_faced', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('catches', models.IntegerField(default=0)),
                ('stumpings', models.IntegerField(default=0)),
                ('balls_bowled', models.IntegerField(default=0)),
                ('runs_conceded', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('content', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-timestamp', '-updated'],
            },
        ),
        migrations.CreateModel(
            name='PlayerStats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('full_name', models.CharField(default='NA', max_length=200)),
                ('dob', models.CharField(default='NA', max_length=50)),
                ('pob', models.CharField(default='NA', max_length=50)),
                ('playing_role', models.CharField(default='NA', max_length=50)),
                ('batting_style', models.CharField(default='NA', max_length=50)),
                ('bowling_style', models.CharField(default='NA', max_length=50)),
                ('ipl_team', models.CharField(default='NA', max_length=50)),
                ('matches', models.IntegerField(default=0)),
                ('batting_innings', models.IntegerField(default=0)),
                ('notouts', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('highest', models.CharField(default='0', max_length=10)),
                ('batting_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balls_faced', models.IntegerField(default=0)),
                ('batting_sr', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('hundreds', models.IntegerField(default=0)),
                ('fifties', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('catches', models.IntegerField(default=0)),
                ('stumpings', models.IntegerField(default=0)),
                ('bowling_innings', models.IntegerField(default=0)),
                ('balls_bowled', models.IntegerField(default=0)),
                ('runs_conceded', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('bbi', models.CharField(default='0', max_length=10)),
                ('bbm', models.CharField(default='0', max_length=10)),
                ('bowling_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('economy', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bowling_sr', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fourfers', models.IntegerField(default=0)),
                ('fifers', models.IntegerField(default=0)),
                ('tenfers', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerStatsBackup',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('full_name', models.CharField(default='NA', max_length=200)),
                ('dob', models.CharField(default='NA', max_length=50)),
                ('pob', models.CharField(default='NA', max_length=50)),
                ('playing_role', models.CharField(default='NA', max_length=50)),
                ('batting_style', models.CharField(default='NA', max_length=50)),
                ('bowling_style', models.CharField(default='NA', max_length=50)),
                ('ipl_team', models.CharField(default='NA', max_length=50)),
                ('matches', models.IntegerField(default=0)),
                ('batting_innings', models.IntegerField(default=0)),
                ('notouts', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('highest', models.CharField(default='0', max_length=10)),
                ('batting_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('balls_faced', models.IntegerField(default=0)),
                ('batting_sr', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('hundreds', models.IntegerField(default=0)),
                ('fifties', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('catches', models.IntegerField(default=0)),
                ('stumpings', models.IntegerField(default=0)),
                ('bowling_innings', models.IntegerField(default=0)),
                ('balls_bowled', models.IntegerField(default=0)),
                ('runs_conceded', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('bbi', models.CharField(default='0', max_length=10)),
                ('bbm', models.CharField(default='0', max_length=10)),
                ('bowling_average', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('economy', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('bowling_sr', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('fourfers', models.IntegerField(default=0)),
                ('fifers', models.IntegerField(default=0)),
                ('tenfers', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerValuations',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('team', models.CharField(default='NA', max_length=50)),
                ('valuation', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ScoreCard',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('batting_team', models.CharField(default='NA', max_length=50)),
                ('bowling_team', models.CharField(default='NA', max_length=50)),
                ('batsman', models.CharField(default='NA', max_length=50)),
                ('nonstriker', models.CharField(default='NA', max_length=50)),
                ('bowler', models.CharField(default='NA', max_length=50)),
                ('runs_batsman', models.IntegerField(default=0)),
                ('runs_extras', models.IntegerField(default=0)),
                ('extra_type', models.CharField(choices=[(0, 'none'), (1, 'wides'), (2, 'no-ball'), (3, 'byes'), (4, 'legbyes')], default='NONE', max_length=20)),
                ('dismissal_type', models.CharField(choices=[(0, 'none'), (1, 'caught'), (2, 'bowled'), (3, 'lbw'), (4, 'runout'), (5, 'retired hurt')], default='NONE', max_length=20)),
                ('dismissed_batsman', models.CharField(default='NA', max_length=50)),
                ('fielder', models.CharField(default='NA', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Sellbook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stocks', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='OPEN', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Sellstage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.IntegerField(default=0)),
                ('num_stocks', models.IntegerField(default=0)),
                ('sold', models.IntegerField(default=0)),
                ('orderprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='OPEN', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stocks', models.IntegerField(default=0)),
                ('orderprice', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('mode', models.CharField(choices=[('buy', 'BUY'), ('sell', 'SELL')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(default='OPEN', max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TransactionScheduler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_stocks', models.IntegerField(default=0)),
                ('price', models.DecimalField(decimal_places=2, default=0.0, max_digits=20)),
                ('mode', models.CharField(choices=[('buy', 'BUY'), ('sell', 'SELL')], max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.News')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='player',
            field=models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='market.PlayerStats'),
        ),
        migrations.AddField(
            model_name='cancelledorders',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company'),
        ),
        migrations.AddField(
            model_name='cancelledorders',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='buystage',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company'),
        ),
        migrations.AddField(
            model_name='buystage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='buybook',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.Company'),
        ),
        migrations.AddField(
            model_name='buybook',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='investmentrecord',
            unique_together={('user', 'company')},
        ),
    ]
